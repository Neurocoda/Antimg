version: 1

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - 6
      - 7
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.BuildTime={{.Date}}
      - -X main.Revision={{.FullCommit}}
    binary: antimg

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - .env.example
      - docker-compose.yml
      - templates/**/*
      - static/**/*

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^chore:'
      - '^style:'
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Security updates'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

release:
  github:
    owner: Neurocoda
    name: Antimg
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## üéâ Antimg {{ .Tag }}
    
    Advanced image watermark attack processing tool.
    
    ### üê≥ Docker Images
    
    Multi-platform Docker images are available:
    
    ```bash
    # GitHub Container Registry
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}
    
    # Docker Hub
    docker pull neurocoda/antimg:{{ .Tag }}
    ```
    
    ### üèóÔ∏è Supported Platforms
    - linux/amd64
    - linux/arm64  
    - linux/arm/v7
    - windows/amd64
    - darwin/amd64
    - darwin/arm64
    
  footer: |
    ## üöÄ Quick Start
    
    ```bash
    # Using Docker
    docker run -d \
      -p 8080:8080 \
      -e JWT_SECRET="your-secure-jwt-key-32-chars-min" \
      -e ADMIN_PASSWORD="your-secure-password" \
      ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}
    
    # Using binary
    ./antimg
    ```
    
    **Full Changelog**: https://github.com/{{ .Env.GITHUB_REPOSITORY }}/compare/{{ .PreviousTag }}...{{ .Tag }}

dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
    extra_files:
      - templates/
      - static/

  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-arm64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
    extra_files:
      - templates/
      - static/

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-arm64"

  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}-arm64"